{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/preparesEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","preparesEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","removeItem","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","res","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","now","minutes","seconds","add","nowPlus1","clone","Modal","setAppElement","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","formValues","setFormValues","titleValid","setTitleValid","openModal","ui","eventActive","calendar","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","dispach","locale","localizer","momentLocalizer","CalendarScreen","view","setView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","PrivateRoute","isAuth","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.649d810d.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`\r\n\r\n  if (method === 'GET') {\r\n    return fetch(url)\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`\r\n  const token = localStorage.getItem('token')\r\n\r\n  if (method === 'GET') {\r\n    return fetch(url, {\r\n      headers: {\r\n        'x-token': token,\r\n      },\r\n    })\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token': token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n  }\r\n}\r\n","export const types = {\r\n  uiOpenModal: '[ui] Open modal',\r\n  uiCloseModal: '[ui] Close modal',\r\n\r\n  eventSetActive: '[event] Set active',\r\n  eventStartAddNew: '[event] Start add new',\r\n  eventAddNew: '[event] Add new',\r\n  eventClearActiveEvent: '[event] Clear active event',\r\n  eventUpdated: '[event] Event updated',\r\n  eventDeleted: '[event] Event deleted',\r\n  eventLoaded: '[event] Event loaded',\r\n  eventLogout: '[event] Event logout',\r\n\r\n  authCheckingFinish: '[auth] Finish checking login state',\r\n  authStartLogin: '[auth] Start login',\r\n  authLogin: '[auth] Login',\r\n  authStartRegister: '[auth] Start register',\r\n  authStartTokenRenew: '[auth] Start token renew',\r\n  authLogout: '[auth] Logout',\r\n}\r\n","import moment from 'moment'\r\n\r\nexport const preparesEvents = (events = []) => {\r\n  return events.map((e) => ({\r\n    ...e,\r\n    end: moment(e.end).toDate(),\r\n    start: moment(e.start).toDate(),\r\n  }))\r\n}\r\n","import Swal from 'sweetalert2'\r\nimport { fetchWithToken } from '../helpers/fetch'\r\nimport { preparesEvents } from '../helpers/preparesEvents'\r\nimport { types } from '../types/types'\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid, name } = getState().auth\r\n    try {\r\n      const res = await fetchWithToken('events', event, 'POST')\r\n      const body = await res.json()\r\n\r\n      if (body.ok) {\r\n        event.id = body.event.id\r\n        event.user = {\r\n          _id: uid,\r\n          name,\r\n        }\r\n\r\n        dispatch(eventAddNew(event))\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event,\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event,\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n  type: types.eventClearActiveEvent,\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await fetchWithToken(`events/${event.id}`, event, 'PUT')\r\n      const body = await res.json()\r\n\r\n      if (body.ok) {\r\n        dispatch(eventUpdated(event))\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n  type: types.eventUpdated,\r\n  payload: event,\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n  return async (dispatch, getState) => {\r\n    const { id } = getState().calendar.eventActive\r\n    try {\r\n      const res = await fetchWithToken(`events/${id}`, {}, 'DELETE')\r\n      const body = await res.json()\r\n\r\n      if (body.ok) {\r\n        dispatch(eventDeleted())\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n  type: types.eventDeleted,\r\n})\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout })\r\n\r\nexport const eventStartLoading = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await fetchWithToken('events')\r\n      const body = await res.json()\r\n      const events = preparesEvents(body.events)\r\n\r\n      dispatch(eventLoaded(events))\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventLoaded = (event) => ({ type: types.eventLoaded, payload: event })\r\n","import Swal from 'sweetalert2'\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch'\r\nimport { types } from '../types/types'\r\nimport { eventLogout } from './events'\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    const res = await fetchWithoutToken('auth', { email, password }, 'POST')\r\n    const body = await res.json()\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      )\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error')\r\n    }\r\n  }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n  return async (dispatch) => {\r\n    const res = await fetchWithoutToken(\r\n      'auth/new',\r\n      { name, email, password },\r\n      'POST'\r\n    )\r\n    const body = await res.json()\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      )\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error')\r\n    }\r\n  }\r\n}\r\n\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const res = await fetchWithToken('auth/renew')\r\n    const body = await res.json()\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(checkingFinish())\r\n    }\r\n  }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user,\r\n})\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('token-init-date')\r\n    dispatch(eventLogout())\r\n    dispatch(logout())\r\n  }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState)\r\n\r\n  const reset = () => {\r\n    setValues(initialState)\r\n  }\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    })\r\n  }\r\n\r\n  return [values, handleInputChange, reset]\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport { startLogin, startRegister } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport './login.css'\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: '',\r\n    lPassword: '',\r\n  })\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: '',\r\n    rEmail: '',\r\n    rPassword1: '',\r\n    rPassword2: '',\r\n  })\r\n  const { lEmail, lPassword } = formLoginValues\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n    dispatch(startLogin(lEmail, lPassword))\r\n  }\r\n  const handleRegister = (e) => {\r\n    e.preventDefault()\r\n    if (rPassword1 !== rPassword2) {\r\n      Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n    }\r\n    dispatch(startRegister(rName, rEmail, rPassword1))\r\n  }\r\n  return (\r\n    <div className='container login-container'>\r\n      <div className='row'>\r\n        <div className='col-md-6 login-form-1'>\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className='form-group'>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Correo'\r\n                name='lEmail'\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='password'\r\n                className='form-control'\r\n                placeholder='Contraseña'\r\n                name='lPassword'\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input type='submit' className='btnSubmit' value='Login' />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className='col-md-6 login-form-2'>\r\n          <h3>Registro</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <div className='form-group'>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Nombre'\r\n                name='rName'\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='email'\r\n                className='form-control'\r\n                placeholder='Correo'\r\n                name='rEmail'\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='password'\r\n                className='form-control'\r\n                placeholder='Contraseña'\r\n                name='rPassword1'\r\n                value={rPassword1}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <input\r\n                type='password'\r\n                className='form-control'\r\n                placeholder='Repita la contraseña'\r\n                name='rPassword2'\r\n                value={rPassword2}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <input type='submit' className='btnSubmit' value='Crear cuenta' />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch()\r\n  const { name } = useSelector((state) => state.auth)\r\n  const handleLogout = () => {\r\n    dispatch(startLogout())\r\n  }\r\n  return (\r\n    <div className='navbar navbar-dark bg-dark mb-4'>\r\n      <span className='navbar-brand'>{name}</span>\r\n      <button className='btn btn-outline-danger' onClick={handleLogout}>\r\n        <i className='fas fa-sign-out-alt'></i>\r\n        <span> Salir</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","export const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: (total) => `+ Ver más (${total})`,\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n  const { title, user } = event\r\n  return (\r\n    <div>\r\n      <strong>{title}</strong>\r\n      <span> - {user.name}</span>\r\n    </div>\r\n  )\r\n}\r\n","import { types } from '../types/types'\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })\r\n","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport DateTimePicker from 'react-datetime-picker'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { uiCloseModal } from '../../actions/ui'\r\nimport {\r\n  eventClearActiveEvent,\r\n  eventStartAddNew,\r\n  eventStartUpdate,\r\n  eventUpdated,\r\n} from '../../actions/events'\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n}\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours')\r\nconst nowPlus1 = now.clone().add(1, 'hours')\r\nModal.setAppElement('#root')\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlus1.toDate(),\r\n}\r\nexport const CalendarModal = () => {\r\n  const [dateStart, setDateStart] = useState(now.toDate())\r\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate())\r\n  const [formValues, setFormValues] = useState(initEvent)\r\n  const [titleValid, setTitleValid] = useState(true)\r\n  const { title, notes, start, end } = formValues\r\n  const { openModal } = useSelector((state) => state.ui)\r\n  const { eventActive } = useSelector((state) => state.calendar)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (eventActive) {\r\n      setFormValues(eventActive)\r\n    } else {\r\n      setFormValues(initEvent)\r\n    }\r\n  }, [eventActive, setFormValues])\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    })\r\n  }\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault()\r\n    const momentStart = moment(start)\r\n    const momentEnd = moment(end)\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire(\r\n        'Error',\r\n        'La fecha fin debe ser mayor a la fecha de inicio',\r\n        'error'\r\n      )\r\n    }\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false)\r\n    }\r\n\r\n    if (eventActive) {\r\n      dispatch(eventStartUpdate(formValues))\r\n    } else {\r\n      dispatch(eventStartAddNew(formValues))\r\n    }\r\n    setTitleValid(true)\r\n    closeModal()\r\n  }\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal())\r\n    dispatch(eventClearActiveEvent())\r\n    setFormValues(initEvent)\r\n  }\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e)\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e,\r\n    })\r\n  }\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e)\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e,\r\n    })\r\n  }\r\n  return (\r\n    <Modal\r\n      isOpen={openModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className='modal'\r\n      overlayClassName='modal-fondo'\r\n    >\r\n      <h1 className='text-center'>\r\n        {eventActive ? 'Editar evento' : 'Nuevo evento'}\r\n      </h1>\r\n      <hr />\r\n      <form className='container' onSubmit={handleSubmitForm}>\r\n        <div className='form-group'>\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className='form-control'\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            className='form-control'\r\n            minDate={dateStart}\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className='form-group'>\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type='text'\r\n            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n            placeholder='Título del evento'\r\n            name='title'\r\n            autoComplete='off'\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <small id='emailHelp' className='form-text text-muted'>\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <textarea\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Notas'\r\n            rows='5'\r\n            name='notes'\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id='emailHelp' className='form-text text-muted'>\r\n            Información adicional\r\n          </small>\r\n        </div>\r\n\r\n        <button type='submit' className='btn btn-outline-primary btn-block'>\r\n          <i className='far fa-save'></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch()\r\n  const handleClickNew = () => {\r\n    dispatch(uiOpenModal())\r\n  }\r\n  return (\r\n    <button className='btn btn-primary fab' onClick={handleClickNew}>\r\n      <i className='fas fa-plus'></i>\r\n    </button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n  const dispach = useDispatch()\r\n\r\n  const handleDelete = () => {\r\n    dispach(eventStartDelete())\r\n  }\r\n  return (\r\n    <button className='btn btn-danger fab-delete' onClick={handleDelete}>\r\n      <i className='fas fa-trash'></i>\r\n      <span> Borrar evento</span>\r\n    </button>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport 'moment/locale/es'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport {\r\n  eventClearActiveEvent,\r\n  eventSetActive,\r\n  eventStartLoading,\r\n} from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarScreen = () => {\r\n  const [view, setView] = useState(localStorage.getItem('lastView') || 'month')\r\n  const dispatch = useDispatch()\r\n  const { events, eventActive } = useSelector((state) => state.calendar)\r\n  const { uid } = useSelector((state) => state.auth)\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading())\r\n  }, [dispatch])\r\n\r\n  const onDoubleClick = (e) => {\r\n    dispatch(uiOpenModal())\r\n  }\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e))\r\n  }\r\n  const onViewChange = (e) => {\r\n    setView(e)\r\n    localStorage.setItem('lastView', e)\r\n  }\r\n  const onSelectSlot = () => {\r\n    dispatch(eventClearActiveEvent())\r\n  }\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    const style = {\r\n      backgroundColor: uid === event.user._id ? '#367FC7' : '#465660',\r\n      borderRadius: 0,\r\n      opacity: 0.8,\r\n      display: 'block',\r\n      color: 'white',\r\n    }\r\n    return { style }\r\n  }\r\n  return (\r\n    <div className='calendar-screen'>\r\n      <Navbar />\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor='start'\r\n        endAccessor='end'\r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        components={{ event: CalendarEvent }}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelectEvent}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n        onView={onViewChange}\r\n        view={view}\r\n      />\r\n      <AddNewFab />\r\n      {eventActive && <DeleteEventFab />}\r\n      <CalendarModal />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nexport const PrivateRoute = ({ isAuth, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuth ? <Component {...props} /> : <Redirect to='/login' />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nexport const PublicRoute = ({ isAuth, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuth ? <Component {...props} /> : <Redirect to='/' />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom'\r\nimport { startChecking } from '../actions/auth'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch()\r\n  const { checking, uid } = useSelector((state) => state.auth)\r\n  useEffect(() => {\r\n    dispatch(startChecking())\r\n  }, [dispatch])\r\n  if (checking) {\r\n    return <h5>Espere...</h5>\r\n  }\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path='/login'\r\n            component={LoginScreen}\r\n            isAuth={!!uid}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path='/'\r\n            component={CalendarScreen}\r\n            isAuth={!!uid}\r\n          />\r\n          <Redirect to='/login' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n  checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false,\r\n      }\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      }\r\n    case types.authLogout:\r\n      return {\r\n        checking: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n  events: [],\r\n  eventActive: null,\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        eventActive: action.payload,\r\n      }\r\n\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload],\r\n      }\r\n\r\n    case types.eventClearActiveEvent:\r\n      return {\r\n        ...state,\r\n        eventActive: null,\r\n      }\r\n\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((e) =>\r\n          e.id === action.payload.id ? action.payload : e\r\n        ),\r\n      }\r\n\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((e) => e.id !== state.eventActive.id),\r\n        eventActive: null,\r\n      }\r\n\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload],\r\n      }\r\n\r\n    case types.eventLogout:\r\n      return {\r\n        ...initialState,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n  openModal: false,\r\n}\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        openModal: true,\r\n      }\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        openModal: false,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer,\r\n})\r\n","import { applyMiddleware, createStore, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from '../reducers/rootReducer'\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <AppRouter />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { CalendarApp } from './CalendarApp'\nimport './style.css'\nReactDOM.render(<CalendarApp />, document.getElementById('root'))\n"],"sourceRoot":""}